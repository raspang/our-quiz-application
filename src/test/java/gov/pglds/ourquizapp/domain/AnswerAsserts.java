package gov.pglds.ourquizapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AnswerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnswerAllPropertiesEquals(Answer expected, Answer actual) {
        assertAnswerAutoGeneratedPropertiesEquals(expected, actual);
        assertAnswerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnswerAllUpdatablePropertiesEquals(Answer expected, Answer actual) {
        assertAnswerUpdatableFieldsEquals(expected, actual);
        assertAnswerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnswerAutoGeneratedPropertiesEquals(Answer expected, Answer actual) {
        assertThat(expected)
            .as("Verify Answer auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnswerUpdatableFieldsEquals(Answer expected, Answer actual) {
        assertThat(expected)
            .as("Verify Answer relevant properties")
            .satisfies(e -> assertThat(e.getAnswerText()).as("check answerText").isEqualTo(actual.getAnswerText()))
            .satisfies(e -> assertThat(e.getIsCorrect()).as("check isCorrect").isEqualTo(actual.getIsCorrect()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnswerUpdatableRelationshipsEquals(Answer expected, Answer actual) {
        assertThat(expected)
            .as("Verify Answer relationships")
            .satisfies(e -> assertThat(e.getQuestion()).as("check question").isEqualTo(actual.getQuestion()));
    }
}
